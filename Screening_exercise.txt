import unittest
from new_trainer import NewTrainer

class TestNewTrainer(unittest.TestCase):
    
    def setUp(self):
        self.trainer = NewTrainer()
    
    def test_train(self):
        x_train = [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        y_train = [3.0, 7.0, 11.0]
        self.trainer.train(x_train, y_train)
        # add assertion to check if the trained model has been saved or not
        self.assertIsNotNone(self.trainer.model)
        
    def test_predict(self):
        x_train = [[1.0, 2.0], [3.0, 4.0], [5.0, 6.0]]
        y_train = [3.0, 7.0, 11.0]
        self.trainer.train(x_train, y_train)
        x_test = [7.0, 8.0]
        y_pred = self.trainer.predict(x_test)
        self.assertIsInstance(y_pred, float)
        
    def test_predict_with_untrained_model(self):
        x_test = [7.0, 8.0]
        with self.assertRaises(AttributeError):
            self.trainer.predict(x_test)
            
if __name__ == '__main__':
    unittest.main()
